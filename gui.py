# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from utils import MT


class Ui_MainWindow:
    def setupUi(self, MainWindow):
        self.MT = MT()
        self.is_db_connected = False
        self.db_conn = None
        self.db_path = None
        self.MainWindow = MainWindow

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("gui_assets/main_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setIconSize(QtCore.QSize(512, 512))

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)

        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")

        font = QtGui.QFont()
        font.setPointSize(16)

        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)

        self.tabAccount = QtWidgets.QWidget()
        self.tabAccount.setObjectName("tabAccount")

        self.layoutAccount = QtWidgets.QGridLayout(self.tabAccount)
        self.layoutAccount.setObjectName("layoutAccount")

        self.labelConnected = QtWidgets.QLabel(self.tabAccount)
        self.labelConnected.setFont(font)
        self.labelConnected.setObjectName("labelConnected")
        self.layoutAccount.addWidget(self.labelConnected, 1, 0, 1, 1)

        self.labelPath = QtWidgets.QLabel(self.tabAccount)
        self.labelPath.setFont(font)
        self.labelPath.setStyleSheet("color: rgb(214, 39, 40);")
        self.labelPath.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelPath.setObjectName("labelPath")
        self.layoutAccount.addWidget(self.labelPath, 1, 1, 1, 1)

        self.ButtonNew = QtWidgets.QPushButton(self.tabAccount)
        self.ButtonNew.setFont(font)
        self.ButtonNew.setObjectName("ButtonNew")
        self.layoutAccount.addWidget(self.ButtonNew, 3, 0, 1, 2)
        self.ButtonNew.clicked.connect(self.new_db)

        self.ButtonOpen = QtWidgets.QPushButton(self.tabAccount)
        self.ButtonOpen.setFont(font)
        self.ButtonOpen.setObjectName("ButtonOpen")
        self.layoutAccount.addWidget(self.ButtonOpen, 4, 0, 1, 2)
        self.ButtonOpen.clicked.connect(self.connect_db)

        self.ButtonTerminate = QtWidgets.QPushButton(self.tabAccount)
        self.ButtonTerminate.setFont(font)
        self.ButtonTerminate.setObjectName("ButtonTerminate")
        self.layoutAccount.addWidget(self.ButtonTerminate, 5, 0, 1, 2)
        self.ButtonTerminate.clicked.connect(self.terminate_connection)

        self.tabWidget.addTab(self.tabAccount, "")

        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")

        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.actionConnect = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("gui_assets/database.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConnect.setIcon(icon1)
        self.actionConnect.setObjectName("actionConnect")
        self.actionConnect.triggered.connect(self.connect_db)

        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("gui_assets/about.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon2)
        self.actionAbout.setObjectName("actionAbout")

        self.menuFile.addAction(self.actionConnect)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())


        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def connect_db(self):
        name = QtWidgets.QFileDialog.getOpenFileName(self.MainWindow, "Open Database", filter="*.db")
        self.db_path = name[0]
        self.db_conn = self.MT.open_db(path=self.db_path)
        self.is_db_connected = True
        self.update_account()

    def new_db(self):
        name = QtWidgets.QFileDialog.getSaveFileName(self.MainWindow, "New Database", filter="SQLite Database (*.db)")
        self.db_path = name[0]
        self.db_conn = self.MT.open_db(path=self.db_path)
        self.MT.initialize_database()
        self.update_account()

    def terminate_connection(self):
        self.db_path = None
        if self.MT is not None:
            self.MT.close()
        self.update_account()

    def update_account(self):
        if self.db_path is None:
            self.labelPath.setText("None")
            self.labelPath.setStyleSheet("color: rgb(214, 39, 40);")
        else:
            self.db_conn = None
            self.labelPath.setText(self.db_path)
            self.labelPath.setStyleSheet("color: rgb(31, 119, 180);")

    def closeEvent(self, event):
        self.terminate_connection()
        print("Closing")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Money Tracker v0.1"))
        self.ButtonNew.setText(_translate("MainWindow", "Start a new account"))
        self.labelPath.setText(_translate("MainWindow", "None"))
        self.labelConnected.setText(_translate("MainWindow", "Current Connected Account:"))
        self.ButtonOpen.setText(_translate("MainWindow", "Connect an existing account"))
        self.ButtonTerminate.setText(_translate("MainWindow", "Terminate the connection"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabAccount), _translate("MainWindow", "Account"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionConnect.setText(_translate("MainWindow", "Connect Database"))
        self.actionConnect.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionAbout.setText(_translate("MainWindow", "About"))


class MainWindowCustom(QtWidgets.QMainWindow):
    def closeEvent(self, event):
        reply = QtWidgets.QMessageBox.question(
            self, "Message",
            "Are you sure you want to quit? Any unsaved work will be lost.",
            QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)

        if reply == QtWidgets.QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)

    with open("./gui_assets/Diffnes.qss", "r") as f:
        stylesheet = f.read()
        app.setStyleSheet(stylesheet)

    MainWindow = MainWindowCustom()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
